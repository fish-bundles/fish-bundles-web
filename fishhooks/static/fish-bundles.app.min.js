var CreateCtrl, MainCtrl, bundleMainTemplate, ctrl, markdownTemplate;

MainCtrl = (function() {
  function MainCtrl(test) {
    this.test = test;
  }

  return MainCtrl;

})();

ctrl = new MainCtrl("b");

markdownTemplate = "Introduction\n------------\n\nThis bundle does something cool.\n\nUsage\n-----\n\ninstall with fish-bundles by adding to your `fish-bundles-list.fish` file:\n\n    set -gx _fish_bundles_list $_fish_bundles_list '<user>/<bundle-name>'\n\nProvided Functions\n------------------\n\nThis bundle comes with the following functions:\n\n* does-something-nice - does something nice with the given $argv\n* does-other-thing - otherify the thingy in the filesystem";

bundleMainTemplate = "function my-function\n    echo Hello $argv\nend";

CreateCtrl = (function() {
  function CreateCtrl(element) {
    this.element = element;
    this.selectedRepository = null;
    this.createDataTables();
    this.bindEvents();
  }

  CreateCtrl.prototype.createDataTables = function() {
    this.tbl = this.element.find('#tbl-repositories');
    this.tbl.dataTable({
      "info": false
    });
    return this.tbl.on('click', 'tr', (function(_this) {
      return function(ev) {
        var row;
        _this.tbl.$('tr.selected').removeClass('selected');
        row = $(ev.currentTarget);
        row.addClass('selected');
        return _this.selectedRepository = row.attr('data-selected-id');
      };
    })(this));
  };

  CreateCtrl.prototype.bindEvents = function() {
    this.elements = {
      category: this.element.find('#bundle-category'),
      warning: this.element.find('#duplicate-name'),
      noRepo: this.element.find('#no-repo')
    };
    return this.element.find('.create-bundle-button').bind('click', (function(_this) {
      return function(ev) {
        var obj;
        obj = {
          repository: _this.selectedRepository,
          category: _this.elements.category.val()
        };
        return _this.createNewBundle(obj);
      };
    })(this));
  };

  CreateCtrl.prototype.createNewBundle = function(obj) {
    this.elements.warning.hide();
    if (this.selectedRepository == null) {
      this.elements.noRepo.show();
      this.elements.noRepo.fadeIn();
      return;
    }
    this.elements.noRepo.hide();
    return $.ajax({
      type: "POST",
      url: '/save-bundle',
      data: {
        obj: JSON.stringify(obj)
      },
      success: (function(_this) {
        return function(result) {
          var resultObj;
          resultObj = JSON.parse(result);
          if (resultObj.result === 'duplicate_name') {
            _this.elements.warning.fadeIn();
            return;
          }
          return window.location = "/bundles/" + resultObj.slug;
        };
      })(this)
    });
  };

  return CreateCtrl;

})();

ctrl = new CreateCtrl($('.create-bundle'));
